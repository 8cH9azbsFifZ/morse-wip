	SUBROUTINE PROCES(Z,RN,XHAT,PX,ELMHAT,LTRHAT)

C	THIS SUBROUTINE IMPLEMENTS THE PROCESSING ALGORITHM
C	FOR JOINT DEMODULATION, DECODING, AND TRANSLATION OF
C	THE RECEIVED MORSE PROCESS. IT TAKES IN A NEW MEASURE-
C	MENT, Z, OF THE DETECTED SIGNAL EVERY 5 MSEC AND PRO-
C	DUCES AN ESTIMATE OF THE CURRENT KEYSTATE, ELEMENT
C	STATE, AND LETTER OF THE RECEIVED SIGNAL.
C	
C	
C	DEFINITIONS OF VARIABLE NAMES:
C	Z- INPUT SAMPLE OF DETECTED SIGNAL
C	RN- INPUT NOISE POWER ESTIMATE
C	XHAT- OUTPUT ESTIMATE OF KEYSTATE
C	ELMHAT- OUTPUT ESTIMATE OF ELEMENT STATE
C	LTRHAT- OUTPUT ESTIMATE OF LETTER STATE
C	
C	
C	ISAVE- NO. OF PREVIOUS PATHS SAVED
C	IPATH- IDENTITY OF SAVED PATH
C	LAMBDA (I) - IDENTITY OF LTR STATE OF SAVED PATH I
C	DUR (I)- DURATION OF ELEMENT ON PATH I
C	ILRATE(I)- IDENTITY OF DATA RATE ON PATH I
C	PIN (I,N)- COMPUTED TRANS PROB FROM PATH I TO STATE N
C	LAMSAV(J)- IDENTITY OF LTR STATE AT NEW NODE J
C	ILRSAV(J)- IDENTITY OF DATA RATE AT NEW NODE J
C	LKHD(J)- LIKELIHOOD VALUE FOR NODE J
C	P(J)- COMPUTED POSTERIOR PROB OF PATH ENDING AT NEW NODE J
C	PSELEM(K)-COMPUTED POSTERIOR PROB OF ELEM K
C	SPDHAT -COND MEAN ESTIMATE OF INSTANT DATA RATE
C	PX- POSTERIOR PROB THAT KEYSTATE EQUALS 1
C	
C	THE FOLLOWING SUBROUTINES ARE UTILIZED:
C	TRPROB- COMPUTES TRANSITION PROBABILITIES
C	PATH- COMPUTES IDENTITY OF NEW PATHS
C	LIKHD- COMPUTES THE LIKELIHOOD OF EACH PATH EXTENSION
C	PROBP- COMPUTES POSTERIOR PROBS OF EACH NEW PATH
C	SPROB- COMPUTES POSTERIOR PROBS OF EACH STATE
C	SAVE- SAVES THE HIGHEST PROB PATHS
C	TRELIS- FORMS A TRELIS OF SAVED PATHS
C	TRANSL- TRANSLATES THE LETTER ESTIMATE
C	
C	ALL TABLES OF CONSTANTS ARE STORED IN COMMON. 



	REAL LKHD

	INTEGER ELMHAT,XHAT,PATHSV,SORT
	DIMENSION LAMBDA(25),DUR(25),ILRATE(25),PIN(25,30)
	DIMENSION LAMSAV(750),DURSAV(750), ILRSAV(750)
	DIMENSION LKHD(750),P(750),PSELEM(5)
	DIMENSION PATHSV(25),SORT(25)

	DATA ISAVE/25/
	DATA LAMBDA/25*5/
	DATA ILRATE/5*10,5*20,5*30,5*40,5*50/
	DATA P/750*1./

	DATA LAMSAV /750*5/
	DATA DUR /25*1000./

C	FOR EACH SAVED PATH, COMPUTE:
C	TRANSITION PROBABILITY TO NEW STATE (TRPROB);
C	IDENTITY OF EACH NEW PATH EXTENDED (PATH);
C	LIKELIHOOD OF EACH STATE EXTENSION (LIKHD);

	DO 100 I=1, ISAVE
	IPATH=I
	CALL TRPROB(IPATH, LAMBDA(I), DUR(I), ILRATE(I),PIN)
	CALL PATH(IPATH,LAMBDA(I), DUR(I), ILRATE(I), LAMSAV, DURSAV, ILR)
	CALL LIKHD(Z, RN, IPATH, LAMBDA(I), DUR(I), ILRATE(I), PIN, LKHD)

100	CONTINUE

C	HAVING OBTAINED ALL NEW PATHS, COMPUTE: 
C	POSTERIOR PROBABILITY OF EACH NEW PATH(PROBP);
C	POSTERIOR PROBABILITY OF KEYSTATE, ELEM STATE,
C	CONDITIONAL MEAN ESTIMATE OF SPEED(SPROB);

	CALL PROBP(P, PIN, ISAVE, LKHD)
	CALL SPROB(P, ISAVE, ILRSAV, PELM, KHAT, SPCHAT, PX)

	XHAT=0
	IF(PX.GT. 0.5) XHAT=1

C	SAVE THE PATHS WITH HIGHEST PROBABILITY, AND
C	STORE THE VALUES CORRESPONDING TO THESE PATHS:

	CALL SAVEP(P, PATHSV, ISAVE, IMAX, LAMSAV, DURSAV, ILRSAV,
     &LAMBDA, DUR, ILRATE, SORT)
C	2	LAMBDA, DUR, ILRATE, SORT)
	GOTO 900

	PRINT 111, Z
111	FORMAT(//,4X,F10.7,/)

	DO 900 INL=1, ISAVE
	PRINT 112, INL, P(INL), PATHSV(INL), LAMBDA(INL), DUR(INL), 
     &ILRATE(INL), LKHD(SORT(INL))
112	FORMAT(1X, I3, 2X, F10.7, 2X, I3, 2X, I3, 2X,F6.1, 2X, I3, 2X,
     &F10.7)
C	2 F10.7)
900	CONTINUE

C	UPDATE TREILTS WITH NEW SAVED NODES, AND
C	OBTAIN LETTER STATE ESTIMATE:

	CALL TRELIS(ISAVE, PATHSV, LAMBDA, IMAX)
200	RETURN

	END

