	SUBROUTINE KALFIL (Z, IP, RN, ILX, IXS, KELEM, JNODE, ISRATE, DUR,
     &ILRATE, PIN, LKHDJ)

C	2	ILRATE, PIN, LKHDJ)

C
C   THIS SUBROUTINE COMPUTES THE ARRAY OF KALMAN FILTER
C   RECURSIONS USED TO DETERMINE THE LIKELIHOODS.
C
C   VARIABLES:
C       Z -   INPUT MEASUREMENT
C       IP -  INPUT PATH IDENTITY
C       RN - INPUT NOISE POWER ESTIMATE
C       ILX - INPUT SAVED KEYSTATE ON PATH IP
C       IXS - INPUT KEYSTAT OF NEW NODE
C       KELEM - INPUT ELEM STATE OF NEW NODE
C       ISRATE - INPUT SPEED STATE OF NEW NODE
C       OUR - INPU CURRENT DURATION OF ELEMENT ON IP
C       ILRATE - INPUT SPEED STATE ON PATH IP
C       PIN - TRANS PROB FROM PATH IP TO NODE N
C       LKHDJ - OUTPUT CALCULATED LIKELIHOOD VALUE
C
C   SUBROUTINES USED
C       MODEL - OBTAINS THE SIGNAL-STATE-DEPENDENT LINEAR
C       MODEL FOR THE KALMAN FILTER RECURSIONS
C



	REAL LKHDJ
	DIMENSION YKKIP(25), PKKIP(25)
	DIMENSION YKKSV(750), PKKSV(750)

	COMMON/BLKSV1/YKKIP, PKKIP, YKKSV, PKKSV
	
	DATA YKKIP/25*.5/,PKKIP/25*.10/
	DATA PINMIN/.00010/



C   IF TRANSITION PROBABILITY IS VERY SMALL, DON'T
C   BOTHER WITH LIKELIHOOD CALCULATION:
C

        IF (PIN.GT.PINMIN) GO TO 100
        LKHDJ = 0.
        GO TO 400

C
C   OBTAIN STATE-DEPENDENT MODEL PARAMETERS:
C

100	CALL MODEL(DUR, KELEM, ILRATE, ISRATE, IXS, PHI, QA, HZ)


C
C	GET PREVIOUS ESTIMATES FOR PATH IP
C

	YKK = YKKIP(IP)
	PKK = PKKIP(IP)

C
C  IMPLEMENT KALMAN FILTER FOR THIS TRANSITION
C

	YPRED=PHI*YKK
	PPRED=PHI*PKK*PHI+QA
	PZ=HZ*PPRED+RN

	PZINV=1./PZ

	G=PPRED*HZ*PZINV

	PEST=(1.-G*HZ)*PPRED

	ZR=Z-HZ*YPRED

	YKKSV(JNODE)=YPRED+G*ZR
	PKKSV(JNODE)=PEST
	IF(YKKSV(JNODE) .LE. .01) YKKSV(JNODE)=.01

	A=0.5*PZINV*ZR**2
	IF(A .LE. 1000.) GO TO 200
	LKHDJ=0.
	GO TO 400

200	LKHDJ=(1./SQRT(PZ))*EXP(-A)
	GO TO 400

	PRINT 3, Z,HZ,QA,PHI,PZ,ZR,G,PEST,YKK,YKKSV(JNODE),LKHDJ
3	FORMAT(1X,11(F6.3,1X),/)

400	RETURN
	END
