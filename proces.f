	SUBROUTINE VISARL(NAM,K)
	DIMENSION K(25)
	REAL K
	CHARACTER *3 NAM

	PRINT 10,NAM,(J,J=1,25)
10	FORMAT(A3,25(I6,1x))
	PRINT 20,(K(J),J=1,25)
20	FORMAT('  :',25(F6.1,1x))
	RETURN
	END


	SUBROUTINE VISARR(NAM,K,Z,ISAVE,ELMHAT)
	DIMENSION K(25)
	INTEGER K, ELMHAT
	CHARACTER *3 NAM

C	PRINT 10,NAM,(J,J=1,25)
C10	FORMAT(A3,25(I6,1x))
	PRINT 20,Z,ELMHAT,(K(J),J=1,ISAVE)
20	FORMAT(F5.1,I3,'  :',25(I6,1x))
	RETURN
	END

	SUBROUTINE VIS(NAM,P)
	DIMENSION P(25,30)
	CHARACTER *3 NAM

	PRINT 10,NAM,(J,J=1,30)
10	FORMAT(A3,30(I7,1x))


	DO 30 I=1,25
	PRINT 20,I,(P(I,J),J=1,30)
20	FORMAT(I2,':',30(F7.2,1x))
30	CONTINUE
	RETURN
	END

	SUBROUTINE VISI(NAM, H)
	INTEGER H
	DIMENSION H(25,30)
	CHARACTER *3 NAM

	PRINT 10,NAM,(J,J=1,30)
10	FORMAT(A3,30(I3,1x))


	DO 30 I=1,25
	PRINT 20,I,(H(I,J),J=1,30)
20	FORMAT(I2,':',30(I3,1x))
30	CONTINUE
	RETURN
	END



	SUBROUTINE PROCES(Z,RN,XHAT,PX,ELMHAT,LTRHAT, SPDHAT, IMAX,PMAX)

C	THIS SUBROUTINE IMPLEMENTS THE PROCESSING ALGORITHM
C	FOR JOINT DEMODULATION, DECODING, AND TRANSLATION OF
C	THE RECEIVED MORSE PROCESS. IT TAKES IN A NEW MEASURE-
C	MENT, Z, OF THE DETECTED SIGNAL EVERY 5 MSEC AND PRO-
C	DUCES AN ESTIMATE OF THE CURRENT KEYSTATE, ELEMENT
C	STATE, AND LETTER OF THE RECEIVED SIGNAL.
C	
C	VIS
C	DEFINITIONS OF VARIABLE NAMES:
C	Z- INPUT SAMPLE OF DETECTED SIGNAL
C	RN- INPUT NOISE POWER ESTIMATE
C	XHAT- OUTPUT ESTIMATE OF KEYSTATE
C	ELMHAT- OUTPUT ESTIMATE OF ELEMENT STATE
C	LTRHAT- OUTPUT ESTIMATE OF LETTER STATE
C	
C	
C	ISAVE- NO. OF PREVIOUS PATHS SAVED
C	IPATH- IDENTITY OF SAVED PATH
C	LAMBDA (I) - IDENTITY OF LTR STATE OF SAVED PATH I
C	DUR (I)- DURATION OF ELEMENT ON PATH I
C	ILRATE(I)- IDENTITY OF DATA RATE ON PATH I
C	PIN (I,N)- COMPUTED TRANS PROB FROM PATH I TO STATE N
C	LAMSAV(J)- IDENTITY OF LTR STATE AT NEW NODE J
C	ILRSAV(J)- IDENTITY OF DATA RATE AT NEW NODE J
C	LKHD(J)- LIKELIHOOD VALUE FOR NODE J
C	P(J)- COMPUTED POSTERIOR PROB OF PATH ENDING AT NEW NODE J
C	PSELEM(K)-COMPUTED POSTERIOR PROB OF ELEM K
C	SPDHAT -COND MEAN ESTIMATE OF INSTANT DATA RATE
C	PX- POSTERIOR PROB THAT KEYSTATE EQUALS 1
C	
C	THE FOLLOWING SUBROUTINES ARE UTILIZED:
C	TRPROB- COMPUTES TRANSITION PROBABILITIES
C	PATH- COMPUTES IDENTITY OF NEW PATHS
C	LIKHD- COMPUTES THE LIKELIHOOD OF EACH PATH EXTENSION
C	PROBP- COMPUTES POSTERIOR PROBS OF EACH NEW PATH
C	SPROB- COMPUTES POSTERIOR PROBS OF EACH STATE
C	SAVE- SAVES THE HIGHEST PROB PATHS
C	TRELIS- FORMS A TRELIS OF SAVED PATHS
C	TRANSL- TRANSLATES THE LETTER ESTIMATE
C	
C	ALL TABLES OF CONSTANTS ARE STORED IN COMMON. 



	REAL LKHD

	INTEGER ELMHAT,XHAT,PATHSV,SORT, IMAX
	DIMENSION LAMBDA(25),DUR(25),ILRATE(25),PIN(25,30)
	DIMENSION LAMSAV(750),DURSAV(750), ILRSAV(750)
	DIMENSION LKHD(750),P(750),PSELEM(5)
	DIMENSION PATHSV(25),SORT(25)

	DATA ISAVE/25/
	DATA LAMBDA/25*5/
	DATA ILRATE/5*10,5*20,5*30,5*40,5*50/
	DATA P/750*1./

	DATA LAMSAV /750*5/
	DATA DUR /25*1000./
	DATA DURSAV/750*0./
	DATA ILRSAV/750*20/, PATHSV/25*5/

C	FOR EACH SAVED PATH, COMPUTE:
C	TRANSITION PROBABILITY TO NEW STATE (TRPROB);
C	IDENTITY OF EACH NEW PATH EXTENDED (PATH);
C	LIKELIHOOD OF EACH STATE EXTENSION (LIKHD);

	DO 110 I=1,750
C	P(I) = 1.0
110	CONTINUE

	DO 100 I=1, ISAVE
	IPATH=I
	CALL TRPROB(IPATH, LAMBDA(I), DUR(I), ILRATE(I),PIN)
C	CALL VISARL('DR1',DUR)
	CALL PATH(IPATH,LAMBDA(I), DUR(I), ILRATE(I), LAMSAV, DURSAV, 
     &ILRSAV)
C	CALL VIS('DRS', DURSAV)
C	CALL VISARR('LBD',LAMBDA)
C	CALL VIS('PIN', PIN) 
	CALL LIKHD(Z, RN, IPATH, LAMBDA(I), DUR(I), ILRATE(I), PIN, LKHD)
C	CALL VIS('LKH',LKHD)

100	CONTINUE

C	HAVING OBTAINED ALL NEW PATHS, COMPUTE: 
C	POSTERIOR PROBABILITY OF EACH NEW PATH(PROBP);
C	POSTERIOR PROBABILITY OF KEYSTATE, ELEM STATE,
C	CONDITIONAL MEAN ESTIMATE OF SPEED(SPROB);

	CALL PROBP(P, PIN, ISAVE, LKHD)

	CALL SPROB(P, ISAVE, ILRSAV, PELM, ELMHAT, SPDHAT, PX)
C	CALL VISI('ILR', ILRSAV)
C	CALL VIS('P1:',P)

C	PRINT 111, Z, PX, SPDHAT, ELMHAT
C111	FORMAT('PROCES:',3(3X,F15.9), 3X,I3)

	XHAT=0
	IF(PX.GT. 0.5) XHAT=1

C	SAVE THE PATHS WITH HIGHEST PROBABILITY, AND
C	STORE THE VALUES CORRESPONDING TO THESE PATHS:
C	CALL VISI('ILS',ILRSAV)

	CALL SAVEP(P, PATHSV, ISAVE, IMAX, LAMSAV, DURSAV, ILRSAV,
     &LAMBDA, DUR, ILRATE, SORT,PMAX)
C	CALL VISARR('LBD',LAMBDA,Z,ISAVE,ELMHAT)
C	CALL VIS('P2:',P)
C	CALL VISARL('DR2',DUR)
C	CALL VISARR('ILR',ILRATE)

C	GOTO 900
C

C
C	DO 900 INL=1, ISAVE
C	PRINT 112, INL, P(INL), PATHSV(INL), LAMBDA(INL), DUR(INL), 
C     &ILRATE(INL), LKHD(SORT(INL))
C112	FORMAT(1X, I3, 2X, F10.7, 2X, I3, 2X, I3, 2X,F6.1, 2X, I3, 2X,
C     &F10.5)
C	2 F10.7)
900	CONTINUE

C	UPDATE TRELLIS WITH NEW SAVED NODES, AND
C	OBTAIN LETTER STATE ESTIMATE:

	CALL TRELIS(ISAVE, PATHSV, LAMBDA, IMAX,IPMAX)
200	RETURN

	END

